openapi: 3.0.0
info:
  title: Export API
  description: |
    This API allows clients to retrieve pledge-related data either individually or in bulk.

    Features:
    - Retrieve a single pledge by ID.
    - Retrieve a paginated list of pledges.
    - Support for sorting, pagination, and content negotiation (`application/json` or `application/xml`).
    - Secured using Basic Authentication.

    ### Authentication
    All endpoints require Basic Authentication.

    To authenticate:
    - Log in to the **Client Portal**.
    - Navigate to the **Export Setting, API Access** section.
    - Copy your **API Key** and **API Secret**.
    - Use these values as follows:
      - **Username** = API Key
      - **Password** = API Secret

    Example curl request:
    ```
    curl -u <apiKey>:<apiSecret> "https://vak1v0ajec.execute-api.ap-southeast-2.amazonaws.com/api/pledge/12345"
    ```
    ```
    curl -u <apiKey>:<apiSecret> \
      "https://vak1v0ajec.execute-api.ap-southeast-2.amazonaws.com/api/pledges?limit=50&offset=0&sort_by=createdAt&order_by=desc" \
      -H "Accept: application/json"
    ```

  version: 1.0.0
servers:
  - url: https://vak1v0ajec.execute-api.ap-southeast-2.amazonaws.com
    description: Production server

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: |
        Use Basic Authentication to access the API.

        - Username: Your **API Key** from the Client Portal.
        - Password: Your **API Secret** from the Client Portal.

        Example:
        ```
        Authorization: Basic base64(apiKey:apiSecret)
        ```

paths:
  /api/pledge/{pledgeId}:
    get:
      summary: Get Pledge by ID
      description: |
        Retrieve detailed information about a specific pledge using its unique identifier.
        This endpoint is secured with Basic Authentication.
        
        To authenticate:
        - Use your API Key as the username.
        - Use your API Secret as the password.

      security:
        - basicAuth: []
      parameters:
        - name: pledgeId
          in: path
          description: Unique identifier for the pledge.
          required: true
          schema:
            type: string
            example: "12345-abcde"
        - name: Accept
          in: header
          description: Desired response format. Supports `application/json` or `application/xml`.
          required: false
          schema:
            type: string
            default: application/json
            enum:
              - application/json
              - application/xml
      responses:
        '200':
          description: Pledge successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "12345-abcde"
                  name:
                    type: string
                    example: "John Doe"
                  amount:
                    type: number
                    format: float
                    example: 100.5
                  status:
                    type: string
                    example: "active"
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid or missing pledge ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing or invalid pledgeId"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Pledge not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Pledge not found"
        '500':
          description: Server error while retrieving pledge
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
                  details:
                    type: string
                    example: "Database connection failed"

  /api/pledges:
    get:
      summary: Get Paginated List of Pledges
      description: |
        Retrieve a list of pledges with support for pagination, sorting, and content negotiation.
        This endpoint is secured with Basic Authentication.

        To authenticate:
        - Use your API Key from the Client Portal as the username.
        - Use your API Secret as the password.

      security:
        - basicAuth: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of records to return. Default is 100.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of records to skip. Useful for pagination.
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sort_by
          in: query
          description: Field to sort results by.
          required: false
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
            example: createdAt
        - name: order_by
          in: query
          description: Sort direction.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - name: Accept
          in: header
          description: Desired response format. Supports `application/json` or `application/xml`.
          required: false
          schema:
            type: string
            default: application/json
            enum:
              - application/json
              - application/xml
      responses:
        '200':
          description: List of pledges successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "12345-abcde"
                        name:
                          type: string
                          example: "Jane Doe"
                        amount:
                          type: number
                          format: float
                          example: 75.0
                        status:
                          type: string
                          example: "pending"
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        example: 100
                      offset:
                        type: integer
                        example: 0
                      total:
                        type: integer
                        example: 254
            application/xml:
              schema:
                type: string
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Server error while retrieving pledge list
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
                  details:
                    type: string
                    example: "Database timeout"
